Evidencia de Aprendizaje 3


Proyecto Integrado V - L√≠nea de √ânfasis (Entrega 3)


Estudiantes:
Maria Johana Arenas Usuga


Docente: Andr√©s Felipe Callejas


Curso: Proyecto Integrado V ‚Äì PREICA2501B020128


Universidad Digital de Antioquia
Ingenier√≠a de Software y Datos
Junio de 2025
‚ÄÉ
Automatizaci√≥n del An√°lisis de Datos Financieros de Bancolombia S.A. (CIB) utilizando Python, GitHub Actions y Control de Versiones


Resumen

Esta segunda entrega del Proyecto Integrado V presenta la ampliaci√≥n del sistema automatizado desarrollado previamente para el an√°lisis de datos financieros de la acci√≥n de Bancolombia S.A. (CIB), enfoc√°ndose en la implementaci√≥n de control de versiones y buenas pr√°cticas de ingenier√≠a de software. Adem√°s del an√°lisis automatizado mediante Python y GitHub Actions, en esta etapa se realiz√≥ el despliegue en un repositorio estructurado con versionamiento sem√°ntico, integraci√≥n continua y validaci√≥n de versiones. El prop√≥sito es garantizar trazabilidad, reproducibilidad y colaboraci√≥n efectiva en entornos de desarrollo orientados a datos.

Introducci√≥n
La automatizaci√≥n del an√°lisis financiero mediante herramientas de c√≥digo abierto permite un acceso √°gil y sistem√°tico a datos relevantes para la toma de decisiones. En la primera entrega se dise√±√≥ un sistema que recopila y enriquece datos hist√≥ricos de la acci√≥n de Bancolombia (CIB), operando autom√°ticamente mediante GitHub Actions.

Para la presente entrega, se ha ampliado el alcance con la integraci√≥n de control de versiones usando Git y GitHub, lo que fortalece el proyecto desde una perspectiva de ingenier√≠a de software. Esta mejora garantiza el seguimiento de los cambios, la validaci√≥n continua del c√≥digo y el despliegue confiable del sistema, asegurando que cada versi√≥n cumpla con est√°ndares de calidad y funcionalidad.

Objetivo General
Implementar control de versiones en el sistema de an√°lisis automatizado de datos financieros de la acci√≥n de Bancolombia S.A. (CIB), fortaleciendo la gesti√≥n del ciclo de vida del software.


Objetivos Espec√≠ficos

‚Ä¢	Desplegar el sistema en un repositorio estructurado y documentado.
‚Ä¢	Implementar integraci√≥n continua (CI) para validar autom√°ticamente la ejecuci√≥n del sistema.
‚Ä¢	Establecer un esquema de versionamiento sem√°ntico para identificar cambios en cada entrega.
‚Ä¢	Validar la integridad funcional de cada versi√≥n del sistema mediante pruebas automatizadas.


Metodolog√≠a
Control de versiones y estructura del repositorio
Se utiliz√≥ Git como sistema de control de versiones distribuido. El repositorio fue organizado de la siguiente forma:

/src/: contiene los m√≥dulos collector.py, enricher.py, modeller.py, logger.py y main.py.
/logs/: almacena los registros de ejecuci√≥n.
/tests/: incluye pruebas unitarias.
.github/workflows/: contiene el archivo update_data.yml para la automatizaci√≥n del flujo CI/CD.
Estructura:
üìÅ src/
‚îÇ   ‚îú‚îÄ‚îÄ collector.py
‚îÇ   ‚îú‚îÄ‚îÄ enricher.py
‚îÇ   ‚îú‚îÄ‚îÄ modeller.py
‚îÇ   ‚îú‚îÄ‚îÄ logger.py
‚îÇ   ‚îú‚îÄ‚îÄ dashboard.py  ==== Generaci√≥n de gr√°ficos
‚îÇ   ‚îî‚îÄ‚îÄ main.py
README.md: documenta el prop√≥sito y uso del proyecto.
El esquema de versionamiento sem√°ntico aplicado sigue el formato MAJOR.MINOR.PATCH (Preston-Werner, 2013). Cada versi√≥n queda documentada con sus cambios principales en el archivo CHANGELOG.md.
Integraci√≥n continua y validaci√≥n
GitHub Actions fue configurado para:
Ejecutar main.py autom√°ticamente cada semana.
Validar que los m√≥dulos corran sin errores (usando pytest).
Generar logs y actualizar los archivos CSV si el an√°lisis fue exitoso.
Se a√±adieron pruebas b√°sicas de consistencia de datos y formato de columnas usando pytest.

Resultados
La gr√°fica incluida en esta etapa muestra el comportamiento del cierre ajustado de la acci√≥n CIB a lo largo del periodo 2024‚Äì2025. Esta visualizaci√≥n resume m√∫ltiples ejecuciones del sistema donde se recolect√≥ informaci√≥n actualizada peri√≥dicamente, permitiendo observar la evoluci√≥n del indicador.
El repositorio ha sido desplegado exitosamente en GitHub y presenta un historial claro de versiones. Cada ejecuci√≥n programada ha sido validada mediante integraci√≥n continua, asegurando que el sistema est√© funcional y actualizado.



Conclusiones
La incorporaci√≥n de control de versiones y herramientas de integraci√≥n continua ha fortalecido el proyecto, garantizando trazabilidad, estabilidad y eficiencia en el desarrollo. Esta mejora permite escalar el sistema, colaborar con otros desarrolladores y adaptar el an√°lisis a nuevos activos financieros con mayor facilidad. El enfoque adoptado responde a buenas pr√°cticas de ingenier√≠a de software orientadas a datos, siendo aplicable tanto en contextos acad√©micos como profesionales.


Referencias

Preston-Werner, T. (2013). Semantic Versioning 2.0.0. Recuperado de https://semver.org/

Yahoo Finance. (2025). Bancolombia S.A. (CIB) Stock Data. Recuperado de https://finance.yahoo.com

Van Rossum, G., & Drake, F. L. (2009). The Python Language Reference Manual. Network Theory Ltd.

Pandas Development Team. (2024). pandas: powerful Python data analysis toolkit. https://pandas.pydata.org

GitHub Docs. (2025). About continuous integration. https://docs.github.com/en/actions/automating-builds-and-tests/about-continuous-integration
‚ÄÉ
CONTINUIDAD ULTIMA ENTREGA PROYECTO INTEGRADOR

Contexto del Proyecto
Este proyecto integrador tiene como prop√≥sito aplicar t√©cnicas de ciencia de datos y visualizaci√≥n para analizar un indicador financiero real, combinando distintas herramientas como Python, GitHub y workflows en la nube.
El indicador seleccionado corresponde al comportamiento burs√°til del activo CIB, que representa a Grupo Bancolombia, actualmente denominado Grupo CIBest. Los datos se extrajeron de la plataforma financiera Yahoo Finance:
https://es.finance.yahoo.com/quote/CIB/history/

¬øQu√© es Grupo CIBest (antes Bancolombia)?
Grupo CIBest es uno de los principales conglomerados financieros de Colombia, con presencia tambi√©n en Centroam√©rica y Estados Unidos. A trav√©s de su acci√≥n CIB listada en la Bolsa de Valores de Nueva York (NYSE), los inversionistas pueden seguir su evoluci√≥n financiera.
¬øEn qu√© invierte Grupo CIBest?
‚Ä¢	Servicios financieros (cr√©ditos, seguros, inversi√≥n)
‚Ä¢	Servicios bancarios personales y corporativos
‚Ä¢	Banca de inversi√≥n y fintech
‚Ä¢	Emisi√≥n de bonos y participaci√≥n en proyectos de desarrollo econ√≥mico
Importancia del Indicador Financiero CIB
El indicador CIB representa el precio de la acci√≥n de Bancolombia en mercados internacionales. Su relevancia radica en que:
‚Ä¢	Mide la confianza del mercado en la gesti√≥n financiera de la entidad.
‚Ä¢	Permite analizar tendencias macroecon√≥micas (como inflaci√≥n, tasas de inter√©s).
‚Ä¢	Es √∫til para inversionistas que desean evaluar la rentabilidad y volatilidad del activo.
Su evoluci√≥n refleja cambios en la estabilidad financiera del pa√≠s.

¬øQu√© mide este indicador y qu√© se busc√≥ con el an√°lisis?
Se midieron principalmente:
‚Ä¢	Precio de apertura y cierre
‚Ä¢	Volumen de transacciones
‚Ä¢	M√°ximos y m√≠nimos hist√≥ricos
‚Ä¢	Variaciones diarias y semanales
El objetivo fue entender el comportamiento del precio de la acci√≥n CIB en el tiempo y encontrar patrones que puedan ayudar en la toma de decisiones financieras.
Dise√±o del Proyecto
a) Extracci√≥n de Datos
‚Ä¢	Los datos se obtuvieron mediante yfinance, una librer√≠a de Python que permite extraer informaci√≥n de mercados directamente desde Yahoo Finance.
‚Ä¢	Se consult√≥ el historial de precios de la acci√≥n CIB en formato hist√≥rico (.csv o DataFrame).
b) Modelamiento
‚Ä¢	Se realiz√≥ limpieza de datos, eliminaci√≥n de valores nulos y conversi√≥n de fechas.
‚Ä¢	Se calcularon indicadores t√©cnicos simples como:
Media m√≥vil (MA)
Porcentaje de cambio
Desviaci√≥n est√°ndar del precio
c) Visualizaci√≥n
‚Ä¢	Se usaron librer√≠as como matplotlib y seaborn para graficar:
Evoluci√≥n del precio en el tiempo
Volumen de operaciones
Variaciones semanales.

Ejecuci√≥n del Proyecto en la Nube
El proyecto fue automatizado mediante GitHub Actions, que permite crear workflows que se ejecutan en la nube sin necesidad de un entorno local.
‚Ä¢	Se program√≥ un script en Python que extrae y analiza los datos.
‚Ä¢	Este script se ejecuta autom√°ticamente en GitHub con cada actualizaci√≥n del repositorio.
‚Ä¢	La automatizaci√≥n hace que el an√°lisis sea repetible, escalable y trazable.
